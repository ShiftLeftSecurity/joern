---
id: node-type-steps
title: Node Type Steps
---

_Node Type Steps_ are _Ocular Query Components_ which proceed a traversal based on specific node types. Code Property Graphs have a number of different node types. Base Node Types are AST node and CFG node.

A Node Type is defined by the traits a specific node has.


```
    "nodeBaseTraits" : [
      { "name" : "DECLARATION", "comment" : "", "hasKeys" : ["NAME"]},
      { "name" : "EXPRESSION", "comment" : "Expression as a specialisation of tracking point", "hasKeys" : ["CODE", "ORDER", "ARGUMENT_INDEX"], "extends" : ["TRACKING_POINT", "CFG_NODE", "AST_NODE"]},
      { "name" : "LOCAL_LIKE", "comment" : "Formal input parameters, locals, and identifiers", "hasKeys" : ["NAME"]},
      { "name" : "CFG_NODE", "comment" : "Any node that can occur as part of a control flow graph", "hasKeys" : ["LINE_NUMBER", "COLUMN_NUMBER", "INTERNAL_FLAGS"], "extends": ["WITHIN_METHOD", "AST_NODE"]},
      { "name" : "TRACKING_POINT", "comment" : "Any node that can occur in a data flow", "hasKeys" : [], "extends": ["WITHIN_METHOD"]},
      { "name" : "WITHIN_METHOD", "comment" : "Any node that can exist in a method", "hasKeys" : []},
      { "name" : "AST_NODE", "comment": "Any node that can exist in an abstract syntax tree", "hasKeys" : ["ORDER"]},
      { "name" : "CALL_REPR", "comment": "Call representation", "hasKeys" : ["CODE", "NAME", "SIGNATURE"], "extends": ["CFG_NODE"]}
    ],
```





- all node type steps in a table
- individual node type steps with their supported Property Directives
- mention that the return types are types of the Scala programming language

Just enough Scala

- explain the AST node types, the CFG node types, etc.


Each node type has a certain number of properties.
If it is an AST node type, it will support AST node type property directives.
If it is an CFG node type, it will support CFG node type property directives.
If it is both an AST node, and a CFG node, it will support property directives for both AST and CFG node types.

Same with Property Directives, Node Type Steps can be connected to a specific number of other Node Type Steps.

For example, the _Node Type Step_ that represents the `META_DATA` node can be put together has the common `id` Property Directive, but has no other supported _Node Type Steps_ because it has no edges in the graph.

### Overview

| Step  | Description   |
| ------------- | ------------- |
| `all`      | All nodes |
| `argument`      | All arguments (actual parameters) |
| `call`      | All call sites |
| `comment`      | All comments (only source-based CPGs) |
| `file`      | All source files |
| `identifier`      | All identifiers, e.g.  occurrences of local variables or class members in method bodies |
| `literal`      | All literals, e.g. numbers or strings  |
| `local`      | All local variables |
| `member`      | All members of complex types, e.g. classes, structs |
| `metaData`      | The meta data node |
| `method`      | All methods |
| `methodRef`      | All method references |
| `methodReturn`      | All formal return paramters |
| `namespace`      | All namespaces |
| `namespaceBlock`      | All namespace blocks |
| `parameter`      | All parameters  |
| `returns`      | All actual return parameters |
| `typeDecl`      | All declarations of types |
| `tag`      | All tags |
| `types`      | All used types |


### all

The `all` Node Type Step represents a traversal which visits all nodes of a Code Property Graph. It supports the two only _Property Directives_ which are common to all _Node Type Steps_, `id` and `label`.


_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `or` |  TODO |

_Supported Property Directives:_

| Property Directive  | Return type | Description   |
| ------------- | ---- | ------------- |
| `id` | Integer | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `label` |  String | Returns the value of the `LABEL` property with represents the node type |

### ast

The `ast` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### argument

The `argument` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### call

The `call` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### comment

The `comment` Node Type Step . 

For source-based Code Property Graphs, returns the files of the program under analysis, for the intermediate-representation Code Property Graphs, it only returns the files of the standard library that it references.

| Node Type Step | Description |
| ------------------ | ----------- |
| `tag` |  TODO |

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `lineNumber` | int | TODO |

### file

The `file` Node Type Step . 

For source-based Code Property Graphs, returns the files of the program under analysis, for the intermediate-representation Code Property Graphs, it only returns the files of the standard library that it references.

| Node Type Step | Description |
| ------------------ | ----------- |
| `namespaceBlock` |  TODO |
| `tag` |  TODO |

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `name` | string | The filename, relative to the root directory of the Program Code |
| `order` | int | General ordering property |


### identifier

The `identifier` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |


### literal

The `literal` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### local

The `local` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### member

The `member` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### metaData

The `metaData` Node Type Step represents a traversal which visits all nodes of type `META_DATA`, of which there is only one.

_Supported Property Directives:_

| Property Directive  | Return type | Description   |
| ------------- | ---- | ------------- |
| `language` | String |  The programming language this graph originates from |
| `overlays` | List(String) |  Names of overlays applied to this Code Property Graph, in order of application |
| `policyDirectories` | List(String) |  Subdirectories of the Policy Directory that should be loaded when processing the Code Property Graph |
| `spid` | TODO |  TODO |
| `version` | String |  TODO |

_Supported Node Type Steps:_

**None.**

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `isEmpty` |  TODO |
| `isDefined` |  TODO |
| `or` |  TODO |

### method

The `method` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `fullName` | string | TODO |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `isExternal` | bool | TODO |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `name` | string | TODO |
| `order` | int | General ordering property |
| `signature` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `block` |  TODO |
| `methodReturn` |  TODO |
| `modifier` |  TODO |
| `parameter` |  TODO |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `bindingTypeDecl` |  TODO |
| `calledBy` |  TODO |
| `calledByIncludingSink` |  TODO |
| `callee` |  TODO |
| `caller` |  TODO |
| `callIn` |  TODO |
| `callOut` |  TODO |
| `callOutRegex` |  TODO |
| `isCfgNode` |  TODO |
| `isEmpty` |  TODO |
| `isPrivate` |  TODO |
| `isProtected` |  TODO |
| `isPublic` |  TODO |
| `isStatic` |  TODO |
| `isVirtual` |  TODO |
| `or` |  TODO |

### methodRef

The `methodRef` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### methodReturn

The `methodReturn` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `code` | string | TODO |
| `depthFirstOrder` | TODO | TODO |
| `evaluationStrategy` | string | TODO |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `isExternal` | bool | TODO |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `order` | int | General ordering property |
| `signature` | string | TODO |
| `typeFullName` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `method` |  TODO |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `isDefined` |  TODO |
| `or` |  TODO |


### modifier

The `modifier` _Node Type Step_.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `order` | int | General ordering property |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `isDefined` |  TODO |
| `or` |  TODO |


### namespace

The `namespace` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### namespaceBlock

The `namespaceBlock` Node Type Step TODO FINISH description.

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `propertyDirective` | THETYPE | Description |

### parameter

The `parameter` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `code` | string | TODO |
| `evaluationStrategy` | string | TODO |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `isExternal` | bool | TODO |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `name` | string | TODO |
| `order` | int | General ordering property |
| `typeFullName` | string | TODO |
| `dynamicTypeHintFullName` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `ast` |  TODO |
| `astParent` |  TODO |
| `astChildren` |  TODO |
| `calledBy` |  TODO |
| `calledByIncludingSink` |  TODO |
| `callee` |  TODO |
| `caller` |  TODO |
| `callIn` |  TODO |
| `callOut` |  TODO |
| `callOutRegex` |  TODO |
| `isCfgNode` |  TODO |
| `isEmpty` |  TODO |
| `isPrivate` |  TODO |
| `isProtected` |  TODO |
| `isPublic` |  TODO |
| `isStatic` |  TODO |
| `isVirtual` |  TODO |
| `or` |  TODO |

### returns

The `returns` Node Type Step TODO FINISH description.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `code` | string | TODO |
| `argumentIndex` | int | TODO |
| `order` | int | General ordering property |


_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `call` |  TODO |
| `file` |  TODO |
| `parameter` |  TODO |
| `tag` |  TODO |
| `local` |  TODO |
| `location` |  TODO |
| `method` |  TODO |
| `methodReturn` |  TODO |
| `literal` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `isDefined` |  TODO |
| `isEmpty` |  TODO |
| `flows` |  TODO |
| `flowsWithSinkPredecessorSamples` |  TODO |
| `reachableBy` | TODO |
| `reaches` | TODO |





### tag

The `tag` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `name` | string | TODO |
| `value` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `call` |  TODO |
| `file` |  TODO |
| `literal` |  TODO |
| `local` |  TODO |
| `location` |  TODO |
| `method` |  TODO |
| `methodReturn` |  TODO |
| `parameter` |  TODO |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `isDefined` |  TODO |
| `isEmpty` |  TODO |

### types

The `types` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `isExternal` | bool | TODO |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `name` | string | TODO |
| `fullName` | string | TODO |
| `typeDeclFullName` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `namespace` |  TODO |
| `parameter` |  TODO |
| `tag` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `ast` |  TODO |
| `aliasType` |  TODO |
| `aliasTypeDecl` |  TODO |
| `aliasTypeTransitive` |  TODO |
| `baseType` |  TODO |
| `baseTypeTransitive` |  TODO |
| `derivedType` |  TODO |
| `derivedTypeDecl` |  TODO |
| `derivedTypeTransitive` |  TODO |
| `referencedTypeDecl` |  TODO |
| `or` |  TODO |

### typeDecl

The `typeDecl` Node Type Step.

_Supported Property Directives:_

| Property Directive | Return type | Description |
| ------------------ | ---- | ----------- |
| `filename` | string | TODO |
| `fullName` | string | TODO |
| `id` | int | Returns an integer that uniquely identifies the node in its Code Property Graph |
| `inheritsFromTypeFullName` | string | TODO |
| `isExternal` | bool | TODO |
| `label` | string | Returns the value of the `LABEL` property with represents the node type |
| `name` | string | TODO |
| `order` | int | General ordering property |
| `typeDeclFullName` | string | TODO |

_Supported Node Type Steps:_

| Node Type Step | Description |
| ------------------ | ----------- |
| `member` |  TODO |
| `method` |  TODO |
| `methodBinding` |  TODO |
| `modifier` |  TODO |

_Supported Hybrid Steps:_

| Hybrid Step | Description |
| ------------------ | ----------- |
| `and` |  TODO |
| `ast` |  TODO |
| `aliasType` |  TODO |
| `aliasTypeFullName` |  TODO |
| `baseType` |  TODO |
| `baseTypeDecl` |  TODO |
| `baseTypeDeclTransitive` |  TODO |
| `or` |  TODO |

